apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-service.fullname" . }}
  labels:
    {{- include "prometheus-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "prometheus-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prometheus-service.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: prometheus-service
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: METRICS_SCRAPE_PATH
              value: '/metrics'
            - name: PROMETHEUS_NS
              value: '{{- include "prometheus-service.namespace" . }}'
            - name: PROMETHEUS_CM
              value: 'prometheus-server'
            - name: PROMETHEUS_LABELS
              value: 'component=server'
            - name: HEALTH_ENDPOINT_PORT
              value: '8081'
            - name: PROMETHEUS_ENDPOINT
              value: "{{ include "prometheus-service.endpoint" . }}"
            - name: PROMETHEUS_CONFIG_FILENAME
              value: 'prometheus.yml'
            - name: ALERT_MANAGER_CONFIG_FILENAME
              value: 'alertmanager.yml'
            - name: ALERT_MANAGER_CM
              value: 'prometheus-alertmanager'
            - name: ALERT_MANAGER_LABELS
              value: 'component=alertmanager'
            - name: ALERT_MANAGER_NS
              value: '{{- include "prometheus-am-service.namespace" . }}'
            - name: ALERT_MANAGER_TEMPLATE_CM
              value: 'alertmanager-templates'
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SCRAPE_INTERVAL
              value: '{{ ((.Values.prometheus).scrapeInterval) | default "5s" }}'
            - name: CREATE_TARGETS
              value: '{{ ((.Values.prometheus).createTargets) | default "true" }}'
            - name: CREATE_ALERTS
              value: '{{ ((.Values.prometheus).createAlerts) | default "true" }}'
            - name: PUBSUB_TOPIC
              value: {{ ((.Values).subscription).pubsubTopic | default "sh.keptn.>" }}
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_DEPLOYMENT_COMPONENT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/component'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name


      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
