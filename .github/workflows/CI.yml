name: CI
on:
  # always execute docker build when something is pushed to master or release-* branches
  push:
    branches:
      - 'master'
      - 'release-*'
  # in addition, execute for pull requests to those branches
  pull_request:
    branches:
      - 'master'
      - 'release-*'
defaults:
  run:
    shell: bash
jobs:
  prepare_ci_run:
    name: Prepare CI Run
    uses: keptn/gh-automation/.github/workflows/prepare-ci.yml@v1.5.1

  ############################################################################
  # Unit tests                                                               #
  ############################################################################
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Unit tests
        uses: ./.github/actions/unit-tests

  ############################################################################
  # Build Docker Image                                                      #
  ############################################################################
  docker_build:
    needs: [prepare_ci_run]
    name: Docker Build
    runs-on: ubuntu-20.04
    env:
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATETIME }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.0

      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .ci_env

      - name: Docker Build
        id: docker_build
        uses: keptn/gh-automation/.github/actions/docker-build@v1.5.1
        with:
          TAGS: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE }}:${{ env.VERSION }}
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE }}:${{ env.VERSION }}.${{ env.DATETIME }}
          BUILD_ARGS: |
            version=${{ env.VERSION }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          PUSH: ${{(github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event.pull_request.head.repo.full_name == github.repository)}}

      - id: report_docker_build_to_pr
        name: Report Docker Build to PR
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          recreate: true
          header: test
          message: |
            The following Docker Images have been built:
            ${{ fromJSON(steps.docker_build.outputs.BUILD_METADATA)['image.name'] }}
            


  helm_chart_build:
    needs: [prepare_ci_run, docker_build]
    name: Build Helm Charts
    runs-on: ubuntu-20.04
    env:
      VERSION: ${{ needs.prepare_ci_run.outputs.VERSION }}
      DATETIME: ${{ needs.prepare_ci_run.outputs.DATETIME }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.0

      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .ci_env

      - name: Build Helm Charts
        id: build_helm_charts
        run: ./gh-actions-scripts/build_helm_chart.sh "${VERSION}" "${VERSION}.${DATETIME}" "${IMAGE}"

      - name: Upload Helm Chart as an artifact
        id: upload_helm_chart
        uses: actions/upload-artifact@v3
        with:
          name: helm-charts
          path: installer/*.tgz
